# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build_backend:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [14.x, 16.x, 18.x]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: api/package-lock.json

    - name: Install NestJS
      run: |
       npm install -g @nestjs/cli

    - name: Environnement Informations Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo OS version
        lsb_release -a
        echo
        echo Linux kernel version
        uname -r
        echo
        echo Current User
        whoami
        echo Node version
        node --version
        echo
        echo NPM version
        npm version
        echo
        echo NestJS version
        npm version
  
    - name: Environnement Informations macOS
      if: matrix.os == 'macos-latest'
      run: |
        echo OS version
        system_profiler SPSoftwareDataType
        echo
        echo Current User
        whoami
        echo
        echo Node version
        node --version
        echo
        echo NPM version
        npm version
        echo
        echo NestJS version
        npm version

    - name: Install node modules
      run: |
       cd api
       npm ci
    - name: Build project
      run: |
       cd api
       npm run build --if-present
    - name: Unit test Built In
      run: |
       cd api
       npm test

  build_frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: front-end/package-lock.json

    - name: Environnement Informations Linux
      run: |
        echo OS version
        lsb_release -a
        echo
        echo Linux kernel version
        uname -r
        echo
        echo Current User
        whoami
        echo Node version
        node --version
        echo
        echo Node/NPM ... version
        npm version
  
    - name: Install node modules
      run: |
       cd front-end
       npm ci

    - name: Build project
      run: |
       cd front-end
       npm run build --if-present
      continue-on-error: true
